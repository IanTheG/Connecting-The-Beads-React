{"ast":null,"code":"var _jsxFileName = \"/Users/iantheg/Documents/Git/Connecting-The-Beads/src/components/Mystery.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { initialState } from '../utils/interfaces';\nimport { fadeAnimation } from '../utils/functions';\nimport getMystery from '../utils/api';\nimport Decade from './Decade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mystery = () => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation(); // Sets a default state for location, otherwise crashes app\n\n  const location2 = { ...location,\n    state: location.state ? location.state : {\n      decade: 0\n    }\n  };\n  const {\n    mystery\n  } = useParams();\n  const [currentMystery, setCurrentMystery] = useState();\n  const [currentDecade, setCurrentDecade] = useState(initialState); // Initializes the chosen mystery in state (prevents repeated server GET requests)\n\n  useEffect(() => {\n    fadeAnimation();\n    let mounted = true;\n\n    const initializeMystery = async () => {\n      const chosenMystery = await getMystery(mystery);\n      if (chosenMystery) setCurrentMystery(chosenMystery.data);else history.push('/');\n    };\n\n    mounted && initializeMystery();\n    return () => {\n      mounted = false;\n    };\n  }, []); // Re-renders when state in location object changes or mystery changes, enables forward-backward navigation\n\n  useEffect(() => {\n    currentMystery && setCurrentDecade(currentMystery.decades[location2.state.decade]);\n  }, [currentMystery, location2.state.decade]);\n  return currentMystery ? /*#__PURE__*/_jsxDEV(Decade, {\n    mysteryName: mystery,\n    currentDecade: currentDecade\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Loading, {\n    mysteryName: mystery\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Mystery, \"SdPqMw3WneCBQQ3I+9bTV3HUuAI=\", false, function () {\n  return [useHistory, useLocation, useParams];\n});\n\n_c = Mystery;\nexport default Mystery;\n\nconst Loading = ({\n  mysteryName\n}) => {\n  _s2();\n\n  useEffect(() => {\n    fadeAnimation();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loading\",\n      style: {\n        textAlign: 'center',\n        margin: '1rem'\n      },\n      children: [\"Loading the \", mysteryName.charAt(0).toUpperCase() + mysteryName.slice(1), \" Mysteries\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Loading, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = Loading;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mystery\");\n$RefreshReg$(_c2, \"Loading\");","map":{"version":3,"sources":["/Users/iantheg/Documents/Git/Connecting-The-Beads/src/components/Mystery.tsx"],"names":["React","useEffect","useState","useHistory","useLocation","useParams","initialState","fadeAnimation","getMystery","Decade","Mystery","history","location","location2","state","decade","mystery","currentMystery","setCurrentMystery","currentDecade","setCurrentDecade","mounted","initializeMystery","chosenMystery","data","push","decades","Loading","mysteryName","alignItems","justifyContent","textAlign","margin","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useHistory, useLocation, useParams } from 'react-router'\nimport { Location as Locale } from 'history'\n\nimport { DecadeI, initialState, MysteryI } from '../utils/interfaces'\nimport { fadeAnimation } from '../utils/functions'\nimport getMystery from '../utils/api'\n\nimport Decade from './Decade'\n\nconst Mystery = () => {\n\n  const history = useHistory()\n\n  const location = useLocation<{ decade: number }>()\n\n  // Sets a default state for location, otherwise crashes app\n  const location2: Locale<{ decade: number }> = {\n    ...location,\n    state: location.state ? location.state : {decade: 0}\n  }\n\n  const { mystery } = useParams<{ mystery: string }>()\n\n  const [currentMystery, setCurrentMystery] = useState<MysteryI>()\n  const [currentDecade, setCurrentDecade] = useState<DecadeI>(initialState)\n\n  // Initializes the chosen mystery in state (prevents repeated server GET requests)\n  useEffect(() => {\n    fadeAnimation()\n    let mounted = true\n    \n    const initializeMystery = async () => {\n      const chosenMystery = await getMystery(mystery)\n      if (chosenMystery) setCurrentMystery(chosenMystery.data)\n      else history.push('/')\n    }\n    mounted && initializeMystery();\n\n    return () => {\n      mounted = false\n    }\n  }, [])\n\n  // Re-renders when state in location object changes or mystery changes, enables forward-backward navigation\n  useEffect(() => {\n      currentMystery && setCurrentDecade(currentMystery.decades[location2.state.decade])\n  }, [currentMystery, location2.state.decade])\n\n  return (\n    currentMystery\n    ? <Decade mysteryName={mystery} currentDecade={currentDecade} />\n    : <Loading mysteryName={mystery} />\n  )\n}\n\nexport default Mystery\n\nconst Loading: React.FC<{ mysteryName: string }> = ({ mysteryName }) => {\n\n  useEffect(() => {\n    fadeAnimation()\n  })\n\n  return (\n    <div className=\"container\" style={{ alignItems: 'center', justifyContent: 'center' }}>\n      <h2 className=\"loading\" style={{ textAlign: 'center', margin: '1rem' }}>Loading the {mysteryName.charAt(0).toUpperCase() + mysteryName.slice(1)} Mysteries</h2>\n      <div className=\"hero-line\"></div>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}